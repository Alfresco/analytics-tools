/*
 * Copyright 2014 Alfresco Software, Ltd.  All rights reserved.
 *
 * License rights for this program may be obtained from Alfresco Software, Ltd. 
 * pursuant to a written agreement and any use of this program without such an 
 * agreement is prohibited. 
 */
package org.alfresco.analytics.activiti;

import static org.junit.Assert.assertNotNull;

import java.io.Serializable;
import java.util.HashMap;
import java.util.Map;

import org.activiti.engine.FormService;
import org.activiti.engine.ProcessEngine;
import org.activiti.engine.RepositoryService;
import org.activiti.engine.RuntimeService;
import org.activiti.engine.impl.test.TestHelper;
import org.activiti.engine.repository.ProcessDefinition;
import org.activiti.engine.test.ActivitiRule;
import org.alfresco.analytics.activiti.demo.executor.DemoProcessExecutor;
import org.alfresco.repo.security.authentication.AuthenticationUtil;
import org.alfresco.repo.workflow.WorkflowModel;
import org.alfresco.service.cmr.repository.NodeRef;
import org.alfresco.service.namespace.QName;
import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;
import org.joda.time.DateTime;
import org.junit.Rule;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Qualifier;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.context.annotation.ImportResource;
import org.springframework.test.annotation.DirtiesContext;
import org.springframework.test.context.ContextConfiguration;
import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;

/**
 * Tests Activiti executors
 *
 * @author Gethin James
 */
@RunWith(SpringJUnit4ClassRunner.class)
@ContextConfiguration
@DirtiesContext
public class ActivitiExecutorTest
{
    protected static String configurationResource = "activiti.cfg.xml";
    private static Log logger = LogFactory.getLog(ActivitiExecutorTest.class);
    
    @Rule
    public ActivitiRule activitiRule = new ActivitiRule();
    
    @Autowired
    BulkActivitiManager manager;
    
    @Autowired
    RepositoryService repositoryService;
    
    @Configuration
    @ImportResource("/alfresco/extension/activiti-executor-test-context.xml")
    static class Config { 
        ProcessEngine engine = TestHelper.getProcessEngine(configurationResource);
        
        @Bean @Qualifier("activitiRuntimeService")
        public RuntimeService activitiRuntimeService() {
            return engine.getRuntimeService();
        }

        @Bean
        public RepositoryService activitiRepositoryService() {
            return engine.getRepositoryService();
        }
        
        @Bean
        public FormService formService() {
            return engine.getFormService();
        }

        @Bean //Initialize AuthenticationUtil
        public AuthenticationUtil authUtil() {
            return new AuthenticationUtil();
        }       
    }
   
    @Test
    public void testManager() throws InterruptedException
    {
        assertNotNull(manager);
        //assertEquals(5, manager.startProcesses(5));
        
    }
    
    @Test
    public void testReviewWorkflow() throws InterruptedException
    {
        String key = "activitiReview";
        
        repositoryService.createDeployment()
          .addClasspathResource("alfresco/workflow/review.bpmn20.xml")
          .deploy();
        
        DateTime start = DateTime.parse("2014-09-01");
        DateTime due = start.plusDays(5);
        DateTime end = DateTime.parse("2014-10-02T23:59:59.999Z");        
        DemoActivitiProcess demoProcess = new DemoActivitiProcess(null, key, start, end, due, "bob");
        DemoProcessExecutor executor = manager.getExecutor("activitiReview");
        executor.executeDemoProcess(demoProcess, true);

    }

}
